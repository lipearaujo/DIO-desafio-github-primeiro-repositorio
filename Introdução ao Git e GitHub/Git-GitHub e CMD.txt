Comandos Básicos no CMD: 

Windows: 
	1) Listar os diretórios da pasta selecionada: dir 
 
	2) Navegar entre as pastas:  
		a) cd/  => avança um diretório 
		b) cd ..  => volta um diretório 
 
	3) Limpar a tela do cmd: cls 
 
	4) Criar uma pasta: mkdir nome_da_pasta 
 
	5) Deletar todos os arquivos:  del nome_da_pasta (No Windows existe a diferença entre deletar arquivos e repositorios, ou seja, o comando del n deleta a pasta, apenas os arquivos contidos nela) 
 
	6) Deletar a pasta e todos os seus arquivos: rmdir nome_da_pasta 
 
	7) Alterar a unidade: cd/d D:\ (ou cd/d C:\) 


Linux/Mac:   
	1) Listar os diretórios da pasta selecionada: ls 

 	2) Navegar entre as pastas:  
		a) cd/  => avança um diretório 
		b) cd ..  => volta um diretório 
 
	3) Limpar a tela do cmd:  clear 
 
	4) Criar uma pasta: mkdir nome_da_pasta 
 
	5) Deletar uma pasta: rm nome_da_pasta 
	
	6) Mostrar caminho do diretorio atual: pwd

	7) Mover um arquivo para uma pasta: mv


Comandos Básicos no GIT: 
	A primeira coisa que você deve fazer quando instalar o Git é definir o seu nome de usuário e endereço de e-mail. Isso é importante porque todos os commits no Git utilizam essas informações, e está imutavelmente anexado nos commits que você realiza.
	Relembrando, você só precisará fazer isso uma vez caso passe a opção --global, pois o Git sempre usará essa informação para qualquer coisa que você faça nesse sistema. Caso você queira sobrepor estas com um nome ou endereço de e-mail diferentes para projetos específicos, você pode executar o comando sem a opção --global quando estiver no próprio projeto
	  - git config --global user.name "Seu Nome"
	  - git config --global user.email "seu_melhor_email.com"

	openssl sha1 nome_do_arquivo (O comando sha1 é utilizado para para identificar revisões, assim como detectar corrupção ou adulteração de dados. OpenSSL é um kit de ferramentas de linha de comando de código aberto muito útil para trabalhar com certificados, solicitações de assinatura de certificado (CSRs) e chaves criptográficas.)
	
	chave ssh: 
		- Para gerar uma chave ssh -> ssh-keygen -t ed25519 -C seu_email_github

		- Navegar ate a pasta onde a chave foi criada e digitar cd /c/Users/Filipe/.ssh/ (Nesse caso a chave foi criada na pasta sugerida c/Users/Filipe/.ssh)
		
		- cat id_ed25519.pub -> código para ter acesso a chave publica gerada (Chave para colocar no github em settings/SSH and GPG Keys)
		
		- Inicializando o ssh-agent: eval $(ssh-agent -s)

		- ssh-add id_ed25519

	Inicializar um repositório git numa pasta: git init
	  - Isso cria um novo subdiretório chamado .git que contem todos os arquivos necessários de seu repositório — um esqueleto de repositório Git. Neste ponto, nada em seu projeto é monitorado.
	

	 
	Passos para salvar Projetos no GitHub:
		Git remote
		 - linkar seu projeto com o seu repositório no github: git remote add origin https:/...
		 - Atualizar o git remote: git remote set-url origin git://repository.url
		 - Remover git remote existente ori: git remote remove origin

		Git add:
	 	 - Este comando adiciona os arquivos solicitados ao ambiente de stage, é uma forma de dizer para o git que você deseja que as modificações daquele arquivo sejam gravadas na próxima remessa. Um exemplo de utilização é: git add . onde o ponto representa todos os arquivos na pasta.

		Git commit:
	 	  - Agora fazemos a gravação em si das modificações, desta forma criamos um snapshot do estado atual do nosso projeto. Uma forma muito usada é o git commit -m “descrição das atualizações do projeto” onde o -m é uma flag que aponta para a mensagem de descrição.

		Git push:
	 	  - Por fim precisamos subir essas modificações no nosso repositório remoto, para isso basta utilizar o comando git push origin main e, se já estiver tudo devidamente configurado, os arquivos serão salvos no repositório remoto correspondente ao seu repositório local!

		Git status:
		  - Monitorar o status do arquivo: git status 
		
		Git clone:
		  - Você clona um repositório com git clone [url]. Por exemplo: git clone https://github.com/username/...


Link com todos os comandos do git: https://comandosgit.github.io/
